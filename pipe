pipeline {
    agent any

    environment {
        TEXT = 'TEXT'
        DOUBLE_TEXT = "Text do ${TEXT}"
    }

    stages {
        stage('Begin') {
            steps {
                script {
                    echo 'Iniciando o pipeline'
                    currentBuild.description = env.STAGE_NAME

                    echo "Stage Name : ${env.STAGE_NAME}"
                    echo "Build Number : ${env.BUILD_NUMBER}"
                    echo "My text: ${env.TEXT}"
                    echo "My double text: ${env.DOUBLE_TEXT}"
                    def textNow = ''
                    textNow = "Agora Ã© ${env.TEXT} + ${env.DOUBLE_TEXT}"
                    echo textNow
                }
            }
        }

        stage('Full Testing') {
            options {
                lock('ios-device')
            }
            stages {
                stage('Install') {
                    steps {
                        echo 'Installing'
                        sleep(time: 5, unit: 'SECONDS')
                    }
                }
                stage('Test') {
                    steps {
                        echo 'Testing'
                        sleep(time: 30, unit: 'SECONDS')
                    }
                }
            }
        }

        stage('Report') {
            steps {
                archiveArtifacts(
                    artifacts: 'results.xml',
                    onlyIfSuccessful: true
                )
            }
        }
    }

    post {
        success {
            script {
                test()
            }
        }
    }
}

def test() {
    def testResultFile = 'results.xml'
    if (fileExists(testResultFile)) {
        echo 'Test result found!'
        def testResult = junit(
            testResults: testResultFile,
            skipPublishingChecks: true
            )
        def total = testResult.totalCount
        def passed = testResult.passCount
        def failed = testResult.failCount

        def echoMessage = (failed > 0) ?
            "Total: ${total}\n- Passed: ${passed}\n- Failed: ${failed}"
            : "Total: ${total}\n- Passed: ${passed}"
        echo echoMessage
        echo "Test Result: ${total} total\n- ${passed} passed\n- ${failed} failed"
        echo testResult
    } else {
        echo 'No test result found!'
    }
}
